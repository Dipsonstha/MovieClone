{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Reactstatic\\\\static-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n//3995c9a5\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://www.omdbapi.com?apikey=3995c9a5';\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const searchMovie = async title => {\n    try {\n      const response = await fetch(`${API_URL}&s=${title}`);\n      const data = await response.json();\n      if (data.Search && data.Search.length > 0) {\n        setTitle(data.Search[0].Title);\n      }\n    } catch (error) {\n      console.log(\"error fetching data\", error);\n    }\n  };\n  useEffect(() => {\n    searchMovie('Batman');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"FgwV7fs/MKl3JfXZzkj+8ZExyxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_URL","App","_s","title","setTitle","searchMovie","response","fetch","data","json","Search","length","Title","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Reactstatic/static-react-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n//3995c9a5\r\n\r\nconst API_URL = 'http://www.omdbapi.com?apikey=3995c9a5';\r\nconst App = () => {\r\n\r\n    const [title, setTitle] = useState('')\r\n\r\n    const searchMovie = async (title) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}&s=${title}`);\r\n            const data = await response.json();\r\n\r\n           if(data.Search && data.Search.length > 0){\r\n            setTitle(data.Search[0].Title)\r\n           }\r\n        } catch (error) {\r\n            console.log(\"error fetching data\", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchMovie('Batman')\r\n    }, []);\r\n    return (\r\n\r\n        <h1>{title}</h1>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAG,wCAAwC;AACxD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,WAAW,GAAG,MAAOF,KAAK,IAAK;IACjC,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,OAAQ,MAAKG,KAAM,EAAC,CAAC;MACrD,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAEnC,IAAGD,IAAI,CAACE,MAAM,IAAIF,IAAI,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,EAAC;QACxCP,QAAQ,CAACI,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC;MAC/B;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAAC;IAC7C;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZS,WAAW,CAAC,QAAQ,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EACN,oBAEIN,OAAA;IAAAiB,QAAA,EAAKb;EAAK;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAExB,CAAC;AAAAlB,EAAA,CAxBKD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA0BT,eAAeA,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}