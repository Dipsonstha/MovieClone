{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Reactstatic\\\\static-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport searchIcon from './search.svg';\nimport MovieCard from './MovieCard';\n//3995c9a5\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://www.omdbapi.com?apikey=3995c9a5';\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    searchMovie('Batman');\n  }, []);\n  const searchMovie = async title => {\n    try {\n      const response = await fetch(`${API_URL}&s=${title}`);\n      const data = await response.json();\n      setMovies(data.Search);\n    } catch (error) {\n      console.log(\"error fetching data\", error);\n    }\n  };\n\n  // const moives = {\n  //     \"Title\": \"Batman Begins\",\n  //     \"Year\": \"2005\",\n  //     \"imdbID\": \"tt0372784\",\n  //     \"Type\": \"movie\",\n  //     \"Poster\": \"https://m.media-amazon.com/images/M/MV5BOTY4YjI2N2MtYmFlMC00ZjcyLTg3YjEtMDQyM2ZjYzQ5YWFkXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\"\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieLand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for moives\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: searchIcon,\n        alt: \"searchicon\",\n        onClick: () => searchMovie(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), movies && movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"nmGuk4IsUa4415BYG0nQ+6CoHIo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","searchIcon","MovieCard","jsxDEV","_jsxDEV","API_URL","App","_s","movies","setMovies","searchTerm","setSearchTerm","searchMovie","title","response","fetch","data","json","Search","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","src","alt","onClick","length","map","movie","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Reactstatic/static-react-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './App.css';\r\nimport searchIcon from './search.svg'\r\nimport MovieCard from './MovieCard';\r\n//3995c9a5\r\n\r\nconst API_URL = 'http://www.omdbapi.com?apikey=3995c9a5';\r\nconst App = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    useEffect(() => {\r\n        searchMovie('Batman')\r\n\r\n    }, []);\r\n    const searchMovie = async (title) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}&s=${title}`);\r\n            const data = await response.json();\r\n\r\n            setMovies(data.Search);\r\n        } catch (error) {\r\n            console.log(\"error fetching data\", error);\r\n        }\r\n    }\r\n\r\n\r\n    // const moives = {\r\n    //     \"Title\": \"Batman Begins\",\r\n    //     \"Year\": \"2005\",\r\n    //     \"imdbID\": \"tt0372784\",\r\n    //     \"Type\": \"movie\",\r\n    //     \"Poster\": \"https://m.media-amazon.com/images/M/MV5BOTY4YjI2N2MtYmFlMC00ZjcyLTg3YjEtMDQyM2ZjYzQ5YWFkXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\"\r\n    // }\r\n    return (\r\n\r\n        <div className='app'>\r\n\r\n            <h1>MovieLand</h1>\r\n            <div className='search'>\r\n                <input placeholder='Search for moives' value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} />\r\n                <img src={searchIcon} alt='searchicon' onClick={() => searchMovie(searchTerm)} />\r\n            </div>\r\n\r\n            {movies && movies.length > 0 ? (\r\n\r\n                <div className='container'>\r\n\r\n                    {movies.map((movie) => (\r\n                        <MovieCard movie={movie} />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <div className='empty'>\r\n                    <h2>No Movies Found</h2>\r\n                </div>\r\n\r\n            )\r\n\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}